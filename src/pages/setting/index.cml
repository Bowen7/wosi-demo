<template>
  <view class="wrapper">
		<view class="item">
			<view 
				class="return"
				c-bind:tap="pageReturn"
			>
				<image 
					src="{{leftImgSrc}}" 
					style="width: 50cpx;height:50cpx;"
				/>
				<text>返回</text>
			</view>
		</view>
		<view class="item">
			<text>夜间模式(正在开发)</text>
			<switch
				checked="{{ switchValue }}"
				c-bind:change="switchChange"
			>
			</switch>
		</view>
		<view class="item" c-bind:tap="selectBook">
			<text>单词书</text>
			<view class="item-right">
				<text>{{ bookInfo.bookName }}</text>
				<image 
					src="{{rightImgSrc}}" 
					style="width: 30cpx;height:30cpx;"
				/>
			</view>
		</view>
		<view class="item" c-bind:tap="selectPlan">
			<text>每日新词数</text>
			<view class="item-right">
				<text>{{ userInfo.plan }}</text>
				<image 
					src="{{ rightImgSrc }}" 
					style="width: 30cpx;height:30cpx;"
				/>
			</view>
		</view>
		<c-picker-panel 
			show="{{bookPickerShow}}" 
			height="{{500}}" 
			header-height="{{100}}"
			c-bind:cancel="bookCancel"
			c-bind:confirm="bookConfirm"
		>
			<c-picker-item 
				text-align="center" 
				height="{{400}}" 
				data="{{bookSelects}}" 
				default-index="{{bookDefaultIndex}}"
				c-bind:selectchange="planSelectchange"
			>
			</c-picker-item>
		</c-picker-panel>

		<c-picker-panel 
			show="{{planPickerShow}}" 
			height="{{500}}" 
			header-height="{{100}}"
			c-bind:cancel="planCancel"
			c-bind:confirm="planConfirm"
		>
			<c-picker-item 
				text-align="center" 
				height="{{400}}" 
				data="{{planSelects}}" 
				default-index="{{planDefaultIndex}}"
				c-bind:selectchange="planSelectchange"
			>
			</c-picker-item>
		</c-picker-panel>
		<c-loading loading="{{loading}}">
		</c-loading>
  </view>


</template>

<script>
import cml from "chameleon-api";
import store from "../../store";
import { CHOOSE_BOOK, CHANGE_PLAN, GET_BOOKS } from "../../store/action-types";
class Index {
	data = {
		leftImgSrc: require("../../assets/images/left.png"),
		rightImgSrc: require("../../assets/images/right.png"),
		bookSelects: [""],
		planSelects: [
			"5",
			"10",
			"15",
			"20",
			"25",
			"30",
			"35",
			"40",
			"45",
			"50"
		],
		bookPickerShow: false,
		planPickerShow: false,
		loading: false,
		bookIndex: 0,
		planIndex: 0,
		switchValue: false
	};

	beforeCreate() {
		cml.setTitle("我思背单词");
	}

	computed = store.mapState({
		bookInfo: "bookInfo",
		userInfo: "userInfo",
		books: "books",
		planDefaultIndex() {
			return this.planSelects.indexOf(this.userInfo.plan + "");
		},
		bookDefaultIndex() {
			let index = this.bookSelects.indexOf(this.bookInfo.bookName);
			index === -1 && (index = 0);
			return index;
		}
	});

	methods = {
		switchChange(e) {
			this.switchValue = e.detail.value;
		},
		bookCancel() {
			this.bookPickerShow = false;
		},
		async bookConfirm() {
			this.loading = true;
			const book = this.books[this.bookIndex];
			const { id: bookid } = book;
			store.dispatch(CHOOSE_BOOK, { bookid });
			this.bookPickerShow = false;
			this.loading = false;
		},
		planCancel() {
			this.planPickerShow = false;
		},
		async planConfirm() {
			this.loading = true;
			const plan = this.planSelects[this.planIndex];
			await store.dispatch(CHANGE_PLAN, { plan });
			this.loading = false;
			this.planPickerShow = false;
		},
		async selectBook() {
			this.loading = true;
			this.bookPickerShow = true;
			await store.dispatch(GET_BOOKS);
			this.bookSelects = this.books.map(item => {
				return item.name;
			});
			this.loading = false;
		},
		selectPlan() {
			this.planPickerShow = true;
		},
		bookSelectchange(e) {
			this.bookIndex = e.detail.index;
		},
		planSelectchange(e) {
			this.planIndex = e.detail.index;
		},
		pageReturn(){
			cml.navigateBack();
		}
	};
}

export default new Index();

</script>
<style scoped>
  @import './index.css';
</style>
<script cml-type="json">
{
  "base": {
    "usingComponents": {
      "c-picker-panel": "cml-ui/components/c-picker-panel/c-picker-panel",
      "c-picker-item": "cml-ui/components/c-picker-item/c-picker-item",
      "c-loading": "cml-ui/components/c-loading/c-loading"
    }
  }
}
</script>
